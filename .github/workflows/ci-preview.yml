name: Build for CI

on:
  push:
    branches: [ "v10" ]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [ "v10" ]

env:
  DOTNET_VERSION: '10.0.100-preview.4.25258.110'
  PluginSolutionPath: 'src\Plugin.Maui.BottomSheet\Plugin.Maui.BottomSheet.sln'
  Configuration: 'Release'
  DOTNETFrameworkVersion: 'net10.0'
  XCODE_VERSION: 16.4

jobs:
  Build-Plugin_Maui_BottomSheet:

    runs-on: windows-latest
      
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install .NET MAUI Workload
        run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

      - name: Build Plugin.Maui.BottomSheet
        run: dotnet build ${{ env.PluginSolutionPath }} -c ${{ env.Configuration }}
  
  Test-Plugin_Maui_BottomSheet-Android:
    
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: macOS
            os: macos-15
            gpu: guest
    name: Android (${{ matrix.platform.name }})
    runs-on: ${{ matrix.platform.os }}

    env:
      TEST_RUNTIME_IDENTIFIER: android-arm64
      TEST_EMULATOR_NAME: XHarnessEmulator
      TEST_EMULATOR_IMAGE: system-images;android-35;google_apis;arm64
      
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'
            
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
               
      - name: Install .NET Android
        run: dotnet workload install android --source https://api.nuget.org/v3/index.json
         
      - name: Install .NET MAUI Workload
        run: dotnet workload install maui --source https://api.nuget.org/v3/index.json
        
      - name: Install XHarness
        run: dotnet tool install Microsoft.DotNet.XHarness.CLI
          --global
          --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json
          --version "10.0.0-prerelease*"

      - name: Install Android SDK Packages
        run: dotnet android sdk install --package 'platform-tools' --package 'emulator' --package '${{ env.TEST_EMULATOR_IMAGE }}'

      - name: Create Emulator
        run: dotnet android avd create --name ${{ env.TEST_EMULATOR_NAME }} --sdk '${{ env.TEST_EMULATOR_IMAGE }}' --force
            
      - name: Publish Android Plugin.Maui.BottomSheet.Tests.App
        run: dotnet publish tests\Plugin.Maui.BottomSheet.Tests.App/Plugin.Maui.BottomSheet.Tests.App.csproj -c ${{ env.Configuration }} -f ${{ env.DOTNETFrameworkVersion }}-android -r ${{ env.TEST_RUNTIME_IDENTIFIER }} -p:TestingMode=XHarness -p:AndroidSdkDirectory=$ANDROID_SDK_ROOT

      - name: Start Emulator
        run: dotnet android avd start --name ${{ env.TEST_EMULATOR_NAME }} --gpu ${{ matrix.platform.gpu }} --wait-boot --no-window --no-snapshot --no-audio --no-boot-anim
        
      - name: Test Android
        run: xharness android test
          --app tests/artifacts/publish/Plugin.Maui.BottomSheet.Tests.App/release_net10.0-android_android-arm64/com.companyname.plugin.maui.bottomsheet.tests.app-Signed.apk
          --package-name com.companyname.plugin.maui.bottomsheet.tests.app
          --instrumentation devicerunners.xharness.maui.XHarnessInstrumentation
          --output-directory artifacts/test-results
        
      - name: Shutdown the Emulator
        run: dotnet xharness android adb -- emu kill
      - name: Clean up build artifacts before upload
        run: |
          rm -rf ./artifacts/bin
          rm -rf ./artifacts/obj
        if: ${{ always() }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: Test Results (XHarness) - Android (${{ matrix.platform.name }})
          path: ./artifacts
  
  Test-Plugin_Maui_BottomSheet-ios:

    runs-on: macos-15
         
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install .NET MAUI Workload
        run: dotnet workload install maui --source https://api.nuget.org/v3/index.json
        
      - name: Install XHarness
        run: dotnet tool install Microsoft.DotNet.XHarness.CLI
          --global
          --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json
          --version "10.0.0-prerelease*"
        
      - name: Set Xcode version ${{env.XCODE_VERSION }} 
        run: sudo xcode-select -s /Applications/Xcode_${{env.XCODE_VERSION }}.app

      - name: Build iOS Plugin.Maui.BottomSheet.Tests.App
        run: dotnet build tests/Plugin.Maui.BottomSheet.Tests.App/Plugin.Maui.BottomSheet.Tests.App.csproj -c Debug -f ${{ env.DOTNETFrameworkVersion }}-ios -r iossimulator-arm64 -p:TestingMode=XHarness

      - name: Test iOS
        run: |
          for i in $(seq 1 3)
          do
            xharness apple test \
              --target ios-simulator-64 \
              --timeout="00:03:00" \
              --launch-timeout=00:06:00 \
              --app tests/artifacts/bin/Plugin.Maui.BottomSheet.Tests.App/debug_net10.0-ios_iossimulator-arm64/Plugin.Maui.BottomSheet.Tests.App.app \
              --output-directory artifacts/test-results \
            && code=0 && break || code=$? && sleep 15
          done
          exit $code

      - name: Clean up build artifacts before upload
        run: |
          rm -rf ./artifacts/bin
          rm -rf ./artifacts/obj
        if: ${{ always() }}
  
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: Test Results (XHarness) - iOS
          path: ./artifacts

  Test-Plugin_Maui_BottomSheet-maccatalyst:

    runs-on: macos-15

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install .NET MAUI Workload
        run: dotnet workload install maui --source https://api.nuget.org/v3/index.json
        
      - name: Install XHarness
        run: dotnet tool install Microsoft.DotNet.XHarness.CLI
          --global
          --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json 
          --version "10.0.0-prerelease*"

      - name: Set Xcode version ${{env.XCODE_VERSION }}
        run: sudo xcode-select -s /Applications/Xcode_${{env.XCODE_VERSION }}.app
        
      - name: Build MacCatalyst Plugin.Maui.BottomSheet.Tests.App
        run: dotnet build tests/Plugin.Maui.BottomSheet.Tests.App/Plugin.Maui.BottomSheet.Tests.App.csproj -c Debug -f ${{ env.DOTNETFrameworkVersion }}-maccatalyst -r maccatalyst-arm64 -p:TestingMode=XHarness

      - name: Test MacCatalyst
        run: xharness apple test
          --target maccatalyst
          --app tests/artifacts/bin/Plugin.Maui.BottomSheet.Tests.App/debug_net10.0-maccatalyst_maccatalyst-arm64/Plugin.Maui.BottomSheet.Tests.App.app
          --output-directory artifacts/test-results

      - name: Clean up build artifacts before upload
        run: |
          rm -rf ./artifacts/bin
          rm -rf ./artifacts/obj
        if: ${{ always() }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: Test Results (XHarness) - iOS
          path: ./artifacts