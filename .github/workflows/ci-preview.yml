name: Build for CI

on:
  push:
    branches: [ "v10" ]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [ "v10" ]

env:
  PluginSolutionPath: 'src\Plugin.Maui.BottomSheet\Plugin.Maui.BottomSheet.sln'
  Configuration: 'Release'
  DOTNETFrameworkVersion: 'net10.0'
  DOTNET_VERSION: '10.0.100-preview.4.25258.110'
  XCODE_VERSION: 16.4
  ANDROID_RUNTIME_IDENTIFIER: android-x64
  iOS_RUNTIME_IDENTIFIER: iossimulator-arm64
  MACCATALYST_RUNTIME_IDENTIFIER: maccatalyst-arm64

jobs:
  Build-Plugin_Maui_BottomSheet:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install .NET MAUI Workload
        run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

      - name: Build Plugin.Maui.BottomSheet
        run: dotnet build ${{ env.PluginSolutionPath }} -c ${{ env.Configuration }}

  Build-Test-Applications:
    runs-on: macos-15
    needs: Build-Plugin_Maui_BottomSheet
    
    strategy:
      matrix:
        include:
          - platform: android
            framework: ${{ env.DOTNETFrameworkVersion }}-android
            runtime: ${{ env.ANDROID_RUNTIME_IDENTIFIER }}
            build-command: publish
          - platform: ios
            framework: ${{ env.DOTNETFrameworkVersion }}-ios
            runtime: ${{ env.iOS_RUNTIME_IDENTIFIER }}
            build-command: build
          - platform: maccatalyst
            framework: ${{ env.DOTNETFrameworkVersion }}-maccatalyst
            runtime: ${{ env.MACCATALYST_RUNTIME_IDENTIFIER }}
            build-command: build
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install .NET MAUI Workload
        run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

      - name: Set Xcode version ${{ env.XCODE_VERSION }}
        if: matrix.platform != 'android'
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app

      - name: Build/Publish ${{ matrix.platform }} Test Application
        run: dotnet ${{ matrix.build-command }} tests/Plugin.Maui.BottomSheet.Tests.Application/Plugin.Maui.BottomSheet.Tests.Application.csproj -c ${{ env.Configuration }} -f ${{ matrix.framework }} -r ${{ matrix.runtime }} -p:TestingMode=XHarness ${{ matrix.platform == 'android' && '-p:AndroidSdkDirectory=$ANDROID_SDK_ROOT' || '' }}

      - name: Upload Android APK
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v4
        with:
          name: TestApp-${{ matrix.platform }}
          path: tests/Plugin.Maui.BottomSheet.Tests.Application/bin/Release/${{ matrix.framework }}/${{ matrix.framework }}/com.companyname.plugin.maui.bottomsheet.tests.application-Signed.apk

      - name: Upload iOS/MacCatalyst App
        if: matrix.platform != 'android'
        uses: actions/upload-artifact@v4
        with:
          name: TestApp-${{ matrix.platform }}
          path: tests/Plugin.Maui.BottomSheet.Tests.Application/bin/Release/${{ matrix.framework }}/${{ matrix.framework }}/Plugin.Maui.BottomSheet.Tests.Application.app

  Test-Apple-Platforms:
    runs-on: macos-15
    needs: Build-Test-Applications
    
    strategy:
      matrix:
        include:
          - platform: ios
            target: ios-simulator-64
            timeout: "00:03:00"
            launch-timeout: "00:06:00"
            retry-attempts: 3
          - platform: maccatalyst
            target: maccatalyst
            timeout: "00:05:00"
            launch-timeout: "00:05:00"
            retry-attempts: 1
    
    steps:
      - name: Download ${{ matrix.platform }} app artifact
        uses: actions/download-artifact@v4
        with:
          name: TestApp-${{ matrix.platform }}
          path: ./app

      - name: Install XHarness
        run: dotnet tool install Microsoft.DotNet.XHarness.CLI
          --global
          --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json
          --version "10.0.0-prerelease*"

      - name: Set Xcode version ${{ env.XCODE_VERSION }}
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app

      - name: Test ${{ matrix.platform }}
        run: |
          for i in $(seq 1 ${{ matrix.retry-attempts }})
          do
            xharness apple test \
              --target ${{ matrix.target }} \
              --timeout="${{ matrix.timeout }}" \
              --launch-timeout=${{ matrix.launch-timeout }} \
              --app ./app/Plugin.Maui.BottomSheet.Tests.Application.app \
              --output-directory artifacts/test-results \
            && code=0 && break || code=$? && sleep 15
          done
          exit $code

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (XHarness) - ${{ matrix.platform }}
          path: ./artifacts

  Test-Android-Platform:
    runs-on: ubuntu-latest
    needs: Build-Test-Applications

    env:
      TEST_EMULATOR_NAME: XHarnessEmulator
      TEST_EMULATOR_PLATFORM_TOOLS: platforms;android-30
      TEST_EMULATOR_IMAGE: system-images;android-30;default;x86_64
      
    steps:
      - name: Download Android app artifact
        uses: actions/download-artifact@v4
        with:
          name: TestApp-android
          path: ./app
            
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install emulator
        run: sdkmanager "platform-tools" "${{ env.TEST_EMULATOR_PLATFORM_TOOLS }}" "emulator" "${{ env.TEST_EMULATOR_IMAGE }}"

      - name: Create Android emulator
        run: avdmanager create avd -n ${{ env.TEST_EMULATOR_NAME }} -k "${{ env.TEST_EMULATOR_IMAGE }}" --device "pixel"

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start Android Emulator
        run: |
          export ANDROID_AVD_HOME="$HOME/.config/.android/avd"
          $ANDROID_SDK_ROOT/emulator/emulator -list-avds
          $ANDROID_SDK_ROOT/emulator/emulator -avd ${{ env.TEST_EMULATOR_NAME }} -no-snapshot -no-window -no-audio -no-boot-anim -accel on &

      - name: Wait for emulator to boot
        run: |
          echo "Waiting for emulator to boot..."
          timeout 300 bash -c 'until $ANDROID_SDK_ROOT/platform-tools/adb shell getprop sys.boot_completed | grep -q "1"; do
          echo "Still waiting for emulator..."
          sleep 5
          done'
          echo "Emulator is ready!"
          
      - name: Install XHarness
        run: dotnet tool install Microsoft.DotNet.XHarness.CLI
          --global
          --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json
          --version "10.0.0-prerelease*"
        
      - name: Test Android
        run: xharness android test
          --app ./app/com.companyname.plugin.maui.bottomsheet.tests.application-Signed.apk
          --package-name com.companyname.plugin.maui.bottomsheet.tests.application
          --instrumentation devicerunners.xharness.maui.XHarnessInstrumentation
          --output-directory artifacts/test-results

      - name: Shutdown the Emulator
        run: xharness android adb -- emu kill

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (XHarness) - Android
          path: ./artifacts